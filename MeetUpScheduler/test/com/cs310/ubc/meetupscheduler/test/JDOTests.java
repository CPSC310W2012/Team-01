package com.cs310.ubc.meetupscheduler.test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import java.util.HashMap;
import java.util.Map;

import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import com.cs310.ubc.meetupscheduler.server.Advisory;
import com.cs310.ubc.meetupscheduler.server.Event;
import com.cs310.ubc.meetupscheduler.server.Facility;
import com.cs310.ubc.meetupscheduler.server.Park;
import com.cs310.ubc.meetupscheduler.server.Washroom;

public class JDOTests {
	Park myPark;
	Advisory myAdvisory;
	Event myEvent;
	Facility myFacility;
	Washroom myWashroom;
	
	@Before
	public void setUp() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
		
	}
	
	@Test
	public void testCreatePark() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
		Map<String, String> parkRow = new HashMap<String, String>();
		parkRow.put("id", "1"); 
		parkRow.put("name", "Super Park"); 
		parkRow.put("street_number", "123");
		parkRow.put("street_name", "Party St");
		parkRow.put("ew_street", "Party St");
		parkRow.put("ns_street", "Rad Ave");
		parkRow.put("google_map_dest", "123.456, 789.012");
		parkRow.put("hectares", "17.5");
		parkRow.put("neighbourhood_name", "Party Hood");
		parkRow.put("neighbourhood_url", "www.partyhood.com");
		parkRow.put("advisories", "Y");
		parkRow.put("facilities", "Y");
		myPark = new Park(parkRow);
		
		HashMap<String, String> myParkFields = myPark.formatForTable();
		assert(myParkFields.equals(parkRow));
	}
	
	@Test
	public void testCreateAdvisory() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
		Map<String, String> advisoryRow = new HashMap<String, String>();
		advisoryRow.put("id", "1");
		advisoryRow.put("park_id", "1");
		advisoryRow.put("date_last", "2012-12-12");
		advisoryRow.put("text", "What a great advisory!");
		advisoryRow.put("url", "www.thebestadvisory.com");
		myAdvisory = new Advisory(advisoryRow);
		
		HashMap<String, String> myAdvisoryFields = myAdvisory.formatForTable();
		myAdvisoryFields.remove("id"); //id will be automatically generated by persistence manager
		assert(myAdvisoryFields.equals(advisoryRow));
	}
	
	@Test
	public void testCreateEvent() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
		Map<String, String> eventRow = new HashMap<String, String>();
		eventRow.put("id", "1");
		eventRow.put("park_id", "1");
		eventRow.put("name", "CHEST BUMP FEST");
		eventRow.put("num_attending", "1");
		eventRow.put("creator", "xxxTHA_BUMPAxxx");
		eventRow.put("category", "MMA");
		eventRow.put("date", "12-12-2012");
		eventRow.put("start_time", "9:00");
		eventRow.put("end_time", "23:59");
		myEvent = new Event(eventRow);
		
		HashMap<String, String> myEventFields = myEvent.formatForTable();
		myEventFields.remove("id"); //id will be automatically generated by persistence manager
		assert(myEventFields.equals(eventRow));
	}
	
	@Test
	public void testCreateFacility() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
		Map<String, String> facilityRow = new HashMap<String, String>();
		facilityRow.put("id", "1");
		facilityRow.put("park_id", "1");
		facilityRow.put("count", "2");
		facilityRow.put("type", "Frisbee Golfcourse");
		facilityRow.put("url", "www.frisbeevancouver.com");
		facilityRow.put("special_features", "N");
		myFacility = new Facility(facilityRow);
		
		HashMap<String, String> myFacilityFields = myFacility.formatForTable();
		assert(myFacilityFields.equals(facilityRow));
	}
	
	@Test
	public void testCreateWashroom() throws SecurityException, IllegalArgumentException, NoSuchFieldException, IllegalAccessException {
		Map<String, String> washroomRow = new HashMap<String, String>();
		washroomRow.put("id", "1");
		washroomRow.put("park_id", "1");
		washroomRow.put("location", "\'Round back");
		washroomRow.put("notes", "Don\'t look in the hole");
		washroomRow.put("summer_hours", "Dawn-Dusk");
		washroomRow.put("winter_hours", "Dusk-Dawn");
		myWashroom = new Washroom(washroomRow);
		
		HashMap<String, String> myWashroomFields = myWashroom.formatForTable();
		assert(myWashroomFields.equals(washroomRow));
	}
	
	
	
}
